- name: Check if librenms is already installed
  stat:
    path: "{{ librenms_home }}"
  register: __librenms_path

- name: Install librenms
  composer:
    command: create-project
    arguments: --keep-vcs librenms/librenms /opt/librenms dev-master
    no_dev: yes
    prefer_dist: yes
    working_dir: /tmp
  when: not __librenms_path.stat.exists

- name: Change ownership
  file:
    path: "{{ librenms_home }}"
    owner: "{{ librenms_user }}"
    group: "{{ librenms_group }}"
    recurse: true

- name: "Apply permissions on {{ librenms_home }}"
  file:
    path: "{{ librenms_home }}"
    mode: u=rwX,g=rwX

- name: Set acls
  acl:
    default: "{{ item.default | default(false)}}"
    path: "{{ item.path }}"
    permissions : "rwx"
    etype : "group"
    entity: "{{ librenms_group }}"
    recursive : "{{ item.recursive | default(false) }}"
    state: present
  with_items:
    # default rules
    - path: "{{ librenms_home }}/rrd"
      default: true
    - path: "{{ librenms_home }}/logs"
      default: true
    - path: "{{ librenms_home }}/bootstrap/cache/"
      default: true
    - path: "{{ librenms_home }}/storage/"
      default: true
    # apply recursive
    - path: "{{ librenms_home }}/rrd"
      recursive: true
    - path: "{{ librenms_home }}/logs"
      recursive: true
    - path: "{{ librenms_home }}/bootstrap/cache/"
      recursive: true
    - path: "{{ librenms_home }}/storage/"
      recursive: true

- name: Install python requirements.
  pip:
    executable: /usr/bin/pip3
    requirements: "{{ librenms_home }}/requirements.txt"
  become_user: "{{ librenms_user }}"
  tags:
    - pip

- name: Update running daily.sh.
  command: "./daily.sh"
  args:
    chdir: "{{ librenms_home }}"
  become_user: "{{ librenms_user }}"
  tags:
    - migrate

- name: Initially set admin user password.
  command: "./adduser.php {{ librenms_admin_user }} {{ librenms_admin_password }} 10"
  args:
    chdir: "{{ librenms_home }}"
  become_user: "{{ librenms_user }}"
  tags:
    - migrate

- name: Deploy cronjob
  copy:
    src: "{{ librenms_home }}/librenms.nonroot.cron"
    dest: /etc/cron.d/librenms
    remote_src: true

- name: Deploy logrotate
  copy:
    src: "{{ librenms_home }}/misc/librenms.logrotate"
    dest: /etc/logrotate.d/librenms
    remote_src: true

